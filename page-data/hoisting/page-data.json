{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/hoisting/",
    "result": {"data":{"cur":{"id":"0e276b04-1780-5099-bfcb-7884429c5683","html":"<!-- 프로젝트 UX/UI 웹공부 3D Network Server 아키텍쳐 Error -->\n<p><del>시끌벅절 주의</del></p>\n<h2 id=\"ready-get-set-go-\" style=\"position:relative;\"><a href=\"#ready-get-set-go-\" aria-label=\"ready get set go  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ready, Get set Go !</h2>","excerpt":"시끌벅절 주의 Ready, Get set Go !","frontmatter":{"date":"October 29, 2021","title":"const, let, var 그리고 hoisting","categories":"웹공부","author":"홍유진","emoji":"🧢"},"fields":{"slug":"/hoisting/"}},"next":{"id":"64edf7f3-3bff-5266-8e74-27f491c8a619","html":"<!-- 프로젝트 UX/UI 웹공부 3D Network Server 아키텍쳐 Error -->\n<p><del>시끌벅절 주의</del></p>\n<h2 id=\"ready-get-set-go-\" style=\"position:relative;\"><a href=\"#ready-get-set-go-\" aria-label=\"ready get set go  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ready, Get set Go !</h2>\n<p><a href=\"https://www.youtube.com/watch?v=RwMWcZrnuWs\" target=\"_blank\" rel=\"bgm\">bgm - 신호등 (이무진)</a></p>\n<p><em>붉은색, 푸른색 그 사이의 갈림길.\nSTOP, READY and GO 출발.</em></p>\n<blockquote>\n<p>🖍 4년간의 시각디자인 전공생\n<em><a href=\"https://ddpjobfair.or.kr/bbs/board.php?bo_table=exhibition&wr_id=95#/hongyoujin\" target=\"_blank\" rel=\"design portpolio\">DDP JOBFAIR 포트폴리오를 보고싶다면 클릭 !</a></em></p>\n</blockquote>\n<p>나는 대학 4년간 시각디자인을 전공으로 해서 여러가지 작업을 해볼 수 있었다. 그동안 <code class=\"language-text\">독립영화 편집감독, 브랜딩, 로고, 앨범아트, 모션그래픽, 타이포그래피, 공간브랜딩</code> 등을 작업해왔다. 시각디자인이라는 포괄적인 영역에서 해볼 수 있는 최대한의 작업을 해봤던 것 같다. 그중에서 내가 가장 재밌게 작업했던 분야는 모션그래픽과 공간브랜딩이었는데, 특히 둘을 포괄하는 미디어파사드는 내 가슴을 항상 두근두근하게 해온 것 같다.</p>\n<p>우리학교에 <code class=\"language-text\">디지털아트</code> 전공이 있었고 나는 그 수업들을 부전공을 통해 많이 배우고 알 수 있었다. 최근엔 보기 쉽지만 직접 만들면서 낯설었던 인터렉션 영상을 과제로 제작해보면서 나는 “이거네!” 했었던 것 같다. 지금까지 작업했었던 모션그래픽은 물론 재밌었지만 내가 제작한 영상을 플레이버튼 하나로만 제어한다는 점이 조금 아쉬웠고 특히나 영상 렌더링 작업이 너무 오래걸렸다..(이거 제발,,ㅋㅋㅋㅋㅋ)</p>\n<p><code class=\"language-text\">프로세싱, 터치디자이너</code>를 접하면서 자연스럽게 파이썬, 자바라는 언어에 발을 들일 수 있었다. 처음 발을 들였을 땐 솔직히 재밌었다. 그냥 숫자를 하나 변경했는데 예상치 못한 모션에 너무 흥미를 느꼈고 매일 밤을 새워 힘들었지만 재밌었다.</p>\n<p>하.지.만. 나는 꼬딱지만큼만 써먹을 수 있었고 (아는게 없었기에) 여기에 답답함을 느끼기 시작했다. 개념으로 아는게 없으니 얼만큼 쓸 수 있는지, 이건 왜 안먹히는지, 언어의 경계를 왔다갔다가 쉽지도 않았다. 그러다보니 어렵게 느껴지기 시작했다. 그 후 나의 1년은 공간브랜딩으로 졸전을 무사히 마치고 다시 취준생으로 돌아왔다. 물론 그 사이 직장에서도 근무했었고 퇴사 후에 많은 생각이 오가며 수능급으로 현타가 왔었다.</p>\n<h2 id=\"주섬주섬-코딩-꺼내기\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%84%AC%EC%A3%BC%EC%84%AC-%EC%BD%94%EB%94%A9-%EA%BA%BC%EB%82%B4%EA%B8%B0\" aria-label=\"주섬주섬 코딩 꺼내기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주섬주섬 코딩 꺼내기</h2>\n<p>모션그래픽과 코딩. 둘 다 나의 관심사임을 떠나서 (적어도 내 생각엔) 둘의 관계는 뗄 수 없다고 생각했다. 나는 두마리의 토끼를 잡고 싶었다. 욕심이었다. 둘 중 하나의 중심을 잡고 뻗어나가는 것이 효과적이라고 생각했고 내 판단은 코딩이었다. 디자인을 잘하는 프론트엔드 개발자. 맨땅에 heading하기 !</p>\n<p>코딩이라는 것을 진정으로 각잡고 시작한지 일주일이 훌쩍 지났다.</p>\n<p>나는 지난 3주간 국비지원을 받으면서 html, css를 공부했다. 아침 9:30부터 저녁 18:30부터 엉덩이를 의자에 붙이고 집에서 온라인으로 하루종일 코딩만 하려다보니 좀이 쑤셨다. 나란 인간은 아침에 일어나자마자 나가서 밤늦게 집에 들어오는 밖순이, 재기발랄한 ENFP, 엄청난 활동과 취미생활을 즐겨했기 때문에 180도 달라진 3주간의 일상에 적응하기엔 너무 힘이 들었다. 이쯤이면 주입식교육은 나랑 너무 안맞는 게 확실하다. 국비,..미안해 stop**</p>\n<h2 id=\"좋아하는-명언들\" style=\"position:relative;\"><a href=\"#%EC%A2%8B%EC%95%84%ED%95%98%EB%8A%94-%EB%AA%85%EC%96%B8%EB%93%A4\" aria-label=\"좋아하는 명언들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>좋아하는 명언들</h2>\n<p><code class=\"language-text\">\"당장은 필요하지 않은 것을 주의깊게 구분해서 멀리 두는 작업을 시작했으면 좋겠다.\" </code></p>\n<p><code class=\"language-text\">\"컴퓨터는 거대한 시였다. 오늘 문득 나는 결국 시를 쓰고 있는 것이라는 생각이 들었다.\" </code></p>\n<p><code class=\"language-text\">\"아마도 문제가 풀리지 않는 것은 지금까지 만든 작업의 맥락에 갇혀있기 때문인 것 같다. 대화나 휴식은 그 맥락을 뒤흔들기 때문에 다른 관점을 제공하는 것 같다.\"</code></p>\n<p><code class=\"language-text\">\"보편적인 것에 대한 관심은 자연스러운 것이지만 처음부터 보편적일 수는 없는 것 같다.\"</code></p>\n<p>주옥같은 인생명언과 계속하여 던져주는 당근들. 나는 그것을 받아먹으니 춤추고 싶어지더라. 웹의 기본적인 구조와 포괄적으로 숲을 이해하니 웹이 재밌어지기 시작했다. 물론 나도 안다. 아직은 이게 다가 아니고, 이제 시작인 것이다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#ready-get-set-go-\">Ready, Get set Go !</a></li>\n<li><a href=\"#%EC%A3%BC%EC%84%AC%EC%A3%BC%EC%84%AC-%EC%BD%94%EB%94%A9-%EA%BA%BC%EB%82%B4%EA%B8%B0\">주섬주섬 코딩 꺼내기</a></li>\n<li><a href=\"#%EC%A2%8B%EC%95%84%ED%95%98%EB%8A%94-%EB%AA%85%EC%96%B8%EB%93%A4\">좋아하는 명언들</a></li>\n</ul>\n</div>","frontmatter":{"date":"September 23, 2021","title":"개발, 그 출발선에 서기까지!","categories":"회고","author":"홍유진","emoji":"🧢"},"fields":{"slug":"/dev-start-line/"}},"prev":{"id":"d8a61db2-65bc-5b62-b6f7-e5254300d011","html":"<!-- 프로젝트 UX/UI 웹공부 3D Network Server 아키텍쳐 Error -->\n<h2 id=\"spa\" style=\"position:relative;\"><a href=\"#spa\" aria-label=\"spa permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SPA</h2>\n<h3 id=\"react-란\" style=\"position:relative;\"><a href=\"#react-%EB%9E%80\" aria-label=\"react 란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React 란?</h3>\n<p>웹앱을 만들때 가장 많은 사람들이 사용하는 자바스크립트 기반의 (Facebook에서 만든) 프레임워크</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">** 웹앱의 장점 (인스타, 페북 등)\n\n1. 모바일 앱으로 발행가능\n2. 앱처럼 뛰어난 UX\n3. 그냥 웹사이트보다 비즈니스적인 강점 - 마케팅의 활용이 좋음</code></pre></div>\n<h3 id=\"react-설치\" style=\"position:relative;\"><a href=\"#react-%EC%84%A4%EC%B9%98\" aria-label=\"react 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React 설치</h3>\n<ol>\n<li>Node.js 설치</li>\n</ol>\n<p>** 최신버전으로 깔아야 버그가 안생긴다고 (<a href=\"https://www.youtube.com/watch?v=nahwuaXmgt8&#x26;list=PLfLgtT94nNq1e6tr4sm2eH6ZZC2jcqGOy&#x26;index=2\">코딩애플 React 기초 1강</a>) 하셨는데 최신버전보단 가장 많은 사람들이 쓰는 버전을 다운받는 것을 추천.</p>\n<p>[리액트 17.0.2 버전 에러사항 깃허브주소] (<a href=\"https://github.com/facebook/react/releases/tag/v17.0.2\">https://github.com/facebook/react/releases/tag/v17.0.2</a>)</p>\n<ol start=\"2\">\n<li>\n<p>폴더 생성후</p>\n</li>\n<li>\n<p>리액트 프로젝트 생성\nVSC 속 터미널을 연다음 <code class=\"language-text\">npx create-react-app (+ 프로젝트 명)</code>\n(라이브러리임)</p>\n</li>\n<li>\n<p>설치중</p>\n</li>\n<li>\n<p>터미널에 <code class=\"language-text\">cd (+ 프로젝트명)</code> Enter\n(해당폴더로 들어가는 중)\n(파일 경로 확인하고 싶으면 <code class=\"language-text\">pwd</code> 터미널에 쳐보기 )</p>\n</li>\n<li>\n<p>VSC : 터미널 열어서 <code class=\"language-text\">npm start</code> 입력</p>\n</li>\n</ol>\n<p>리액트 설치 방법\nNPM(Node Package Manager)\n<a href=\"https://seizemymoment.tistory.com/106\">참고</a></p>\n<ol start=\"7\">\n<li>리액트 설치 완료 !</li>\n</ol>\n<p><a href=\"https://seizemymoment.tistory.com/106\">npm과 npx의 차이는 뭘까?</a></p>\n<hr>\n<p>CRA - 구성하는 폴더\nnode.modules -\npackage.json - 요약본 (프로젝트 이름, 버전, dependencies(의존성:))\ngit ignore - git은 버전 관리 프로그램인데, 깃 이그노어를 설치하면 깃을 추적하지 않아서 깃헙에 올라가지 않음.공유되지 않지 않아야할 민감한 정보는 여기다 적어야함. 혹은 공유해야할 사람과 중복으로 가지고 있으면.</p>\n<ul>\n<li>공유받을 때 git clone 할때, node.modules는 받을 필요없고 package.json만 받으면 된다.</li>\n</ul>\n<p>화면을 그리는 폴더 ㅣㅊ 파일\nindex.html\nindex.js -> ReactDOM.render 함수의 인자는 두개 : 첫번째는 화면에 보여주고 싶은 컴포넌트 / 두번째는 화면에 보여주고 싶은 컴포넌트의 위치\nApp.js -> 현재 보여주는 스크린 첫 면</p>\n<p>src -> component’s’ : 공통 컴포넌트 관리 nav, footer\npages -> 페이지 내의 컴포넌트 경우 이 폴더에서 관리\nstyles -> 공통쓰이는 css</p>\n<p>node.js를 굳이 필요한 이유는?\nReact -> node.js -> browser\nJSX, syntax, bundling, env 다ㅏ 구동하고 브라우저로 보내야하기 때문에</p>\n<p>npm\npackage : 하나하나 프로그램들, (개발용어들은 먼저 쓰이다ㅏ가 나중에 정확히 정의를 하려고 한다. 그래서 좀 애매할 수도 있다.)</p>\n<h3 id=\"jsx-문법\" style=\"position:relative;\"><a href=\"#jsx-%EB%AC%B8%EB%B2%95\" aria-label=\"jsx 문법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSX 문법</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">** React란 html과 css, js를 동시에 한 파일내에서 작성하는 프레임워크이다.</code></pre></div>\n<ul>\n<li>App.js 파일이 메인페이지이다.</li>\n<li>JSX</li>\n</ul>\n<ol>\n<li>태그에 class를 주고 싶으면?</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;div className = '클래스명'></code></pre></div>\n<ol start=\"2\">\n<li>리액트에서 데이터 바인딩 쉽게 할 수 있음</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">** 데이터 바인딩이랑? 새로고침을 하지 않아도 쉽게 쉽게 재렌더링 할 수 있음!\n\n** {중괄호} 를 써야함!\n   {변수명, 함수명등}</code></pre></div>\n<p>그냥 {중괄호 안에 함수나 for, if 는 쓸 수 없음}</p>\n<ol start=\"3\">\n<li>JSX에서 style 속성 집어넣을때</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">style = {마찬가지로 중괄호, object 자료형으로 만든 스타일}</code></pre></div>\n<h3 id=\"usestate\" style=\"position:relative;\"><a href=\"#usestate\" aria-label=\"usestate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useState</h3>\n<p>React에서 데이터는 (데이터 저장방법 2가지)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. 변수에 넣거나\n2. state에 넣던가</code></pre></div>\n<ul>\n<li>state를 쓰는 가장 큰 장점 : 새로고침하지 않아도 html이 스무스하게 재렌더링이 된다는 것.</li>\n</ul>\n<ol>\n<li>{useState} 상단에 첨부</li>\n<li>useState(‘데이터’)</li>\n<li>문자, 숫자, array, object 다 저장가능\n** ES6 destructuring 문법 참고하기</li>\n</ol>\n<h3 id=\"eventlistener-추가방법\" style=\"position:relative;\"><a href=\"#eventlistener-%EC%B6%94%EA%B0%80%EB%B0%A9%EB%B2%95\" aria-label=\"eventlistener 추가방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>EventListener 추가방법</h3>\n<p>이벤트를 추가한다는 것 = 재렌더링이 많이 일어난다 = 데이터바인딩 쉽게 할 수 있게 만들자</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">onClick ={클릭될 때 실항할 함수}\nonClick = { ()=>{실행할 내용} }</code></pre></div>\n<h3 id=\"setstate\" style=\"position:relative;\"><a href=\"#setstate\" aria-label=\"setstate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>setState</h3>\n<p>데이터를 변경할 때,</p>\n<p>1.수정된 […데이터]</p>\n<p>state의 복사본(deep copy)을 새로 만들어서 수정하기 (원본 state 건들지 마!!)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">** deep copy란? 값 공유하지 않고 서로 독립적인 값을 가지는 복사를 뜻함</code></pre></div>\n<p>Array, Object state 데이터 수정방법</p>\n<ol start=\"2\">\n<li>변경함수 (‘대체할 데이터’)</li>\n</ol>\n<p>state의 복사본(deep copy)을 새로 만들어서 수정하기 (원본 state 건들지 마!!)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">** deep copy란? 값 공유하지 않고 서로 독립적인 값을 가지는 복사를 뜻함</code></pre></div>\n<p>정리 >> 우선 기존 state를 deep copy한 후, 대체할 데이터를 반영하고, 변경함수()에 집어넣기</p>\n<h3 id=\"component\" style=\"position:relative;\"><a href=\"#component\" aria-label=\"component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>component</h3>\n<p>.html 파일을 깔끔하게 축약해서 보기 예쁘게 만드는 문법</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">** 장점 : 덩어리로 관리할 수 있음. 반복하여 사용되는 html활용. 자주 변경되는 html UI. 다른 페이지 만들때.\n\n** 단점 : state 쓸 때 복잡해짐. (상위 component에서 만든 state를 쓰려면 props 문법을 활용할 수 있다)</code></pre></div>\n<ul>\n<li>html을 하나의 단어로 치환하여 사용한다. (하나의 덩어리로 활용가능)</li>\n</ul>\n<p>App.js에서 활용문법</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function 단어(){\nreturn(\n/// &lt;html 문법>\n)\n}</code></pre></div>\n<hr>\n<p><em>React 설치부터 정말 쉽지 않았다. js 기반의 프레임워크인만큼 앞으로 벌어질 재밌는 일에 대해 기대된다 😊</em></p>","frontmatter":{"date":"October 29, 2021","title":"SPA(Single Page Application)","categories":"웹공부","author":"홍유진","emoji":"♻️"},"fields":{"slug":"/react/"}},"site":{"siteMetadata":{"siteUrl":"https://howyoujini.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/hoisting/","nextSlug":"/dev-start-line/","prevSlug":"/react/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}