{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/TDD/",
    "result": {"data":{"cur":{"id":"b56e04b7-01b2-5e75-98cb-5fd54fb4748d","html":"<!-- 프로젝트 UX/UI 웹공부 3D Network Server 아키텍쳐 Error -->\n<h2 id=\"-소개\" style=\"position:relative;\"><a href=\"#-%EC%86%8C%EA%B0%9C\" aria-label=\" 소개 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👋 소개</h2>\n<p>SRP : Single Responsibility Principle (의존성을 적게 생겨)</p>","excerpt":"👋 소개 SRP : Single Responsibility Principle (의존성을 적게 생겨)","frontmatter":{"date":"November 27, 2021","title":"애자일하게 개발하기, TDD (Test Driven Development)","categories":"웹공부","author":"홍유진","emoji":"🧢"},"fields":{"slug":"/TDD/"}},"next":{"id":"dd6612a0-1447-55ef-bffd-0e5afdaf8eda","html":"<!-- 프로젝트 UX/UI 웹공부 3D Network Server 아키텍쳐 Error -->\n<h2 id=\"redux-와-mobx의-차이점\" style=\"position:relative;\"><a href=\"#redux-%EC%99%80-mobx%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"redux 와 mobx의 차이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redux 와 MobX의 차이점</h2>","frontmatter":{"date":"November 24, 2021","title":"VCC git","categories":"웹공부","author":"홍유진","emoji":"♻️"},"fields":{"slug":"/git/"}},"prev":{"id":"134c6075-28ea-53b9-93b0-95504634f1fa","html":"<!-- 프로젝트 UX/UI 웹공부 3D Network Server 아키텍쳐 Error -->\n<h2 id=\"-소개\" style=\"position:relative;\"><a href=\"#-%EC%86%8C%EA%B0%9C\" aria-label=\" 소개 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👋 소개</h2>\n<h3 id=\"관심사의-분리soc--separation-of-concerns가-무엇일까\" style=\"position:relative;\"><a href=\"#%EA%B4%80%EC%8B%AC%EC%82%AC%EC%9D%98-%EB%B6%84%EB%A6%ACsoc--separation-of-concerns%EA%B0%80-%EB%AC%B4%EC%97%87%EC%9D%BC%EA%B9%8C\" aria-label=\"관심사의 분리soc  separation of concerns가 무엇일까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관심사의 분리(SoC : Separation of Concerns)가 무엇일까?</h3>\n<p>-> API 공식문서를 읽어야 하는 상황이 생길지도 모른다. 하지만 우리가 앞으로 읽어야 하는 상황이 많아질 것이기 때문에 읽는 연습을 해야한다.</p>\n<p>왜 관심사를 분리하기 시작했을까?</p>\n<blockquote>\n<p>내가 만든 컴포넌트에 ~~한 조건이 추가되면 어떻게 하지?\n이미 한참 만들었는데 ~~ 부분이 변경되어야하면 어떻게 하지?\n처음 설계할 때는 ~~한 경우까지는 생각하지 않았는데 ~~에서 쓰이면 어떻게 하지?</p>\n</blockquote>\n<p>&#x3C;걱정>\n책임의 분리 : 우리의 코드가 하나의 관심만 가지고 그 기능만 확실히 하게 하자.</p>\n<ol>\n<li><strong>Loose Coupling</strong> (낮은 결합도, 각각의 코드가 서로 얽혀있지 않고 독립적으로 잘 분리되어 있음)</li>\n<li><strong>High Conhesive</strong> (높은 응집도, 유사한 내용끼리 비슷한 위치에 잘 모여있음)</li>\n</ol>\n<p>장점 :\n코드가 명료해짐.\n코드 재사용성이 올라감.\n유지보수가 용이함.\n테스트 코드를 작성하기 쉬워짐.</p>\n<h3 id=\"motivation\" style=\"position:relative;\"><a href=\"#motivation\" aria-label=\"motivation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Motivation</h3>\n<ol>\n<li>View와 Logic의 분리\nView : UI\nLogic : 기능</li>\n</ol>\n<p>&#x3C;Custom Hook이 존재하지 않았을 때, 컴포넌트의 분리>\nPresentational Component : UI Only 컴포넌트\nContainer Component : Logic Only 컴포넌트</p>\n<p>&#x3C;Custom Hook 사용></p>","frontmatter":{"date":"December 01, 2021","title":"hooks 정리","categories":"웹공부","author":"홍유진","emoji":"🧢"},"fields":{"slug":"/hooks/"}},"site":{"siteMetadata":{"siteUrl":"https://howyoujini.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/TDD/","nextSlug":"/git/","prevSlug":"/hooks/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}