{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/react/",
    "result": {"data":{"cur":{"id":"d8a61db2-65bc-5b62-b6f7-e5254300d011","html":"<!-- 프로젝트 UX/UI 웹공부 3D Network Server 아키텍쳐 Error -->\n<h2 id=\"spa\" style=\"position:relative;\"><a href=\"#spa\" aria-label=\"spa permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SPA</h2>\n<h3 id=\"react-란\" style=\"position:relative;\"><a href=\"#react-%EB%9E%80\" aria-label=\"react 란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React 란?</h3>\n<p>웹앱을 만들때 가장 많은 사람들이 사용하는 자바스크립트 기반의 (Facebook에서 만든) 프레임워크</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">** 웹앱의 장점 (인스타, 페북 등)\n\n1. 모바일 앱으로 발행가능\n2. 앱처럼 뛰어난 UX\n3. 그냥 웹사이트보다 비즈니스적인 강점 - 마케팅의 활용이 좋음</code></pre></div>\n<h3 id=\"react-설치\" style=\"position:relative;\"><a href=\"#react-%EC%84%A4%EC%B9%98\" aria-label=\"react 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React 설치</h3>\n<ol>\n<li>Node.js 설치</li>\n</ol>\n<p>** 최신버전으로 깔아야 버그가 안생긴다고 (<a href=\"https://www.youtube.com/watch?v=nahwuaXmgt8&#x26;list=PLfLgtT94nNq1e6tr4sm2eH6ZZC2jcqGOy&#x26;index=2\">코딩애플 React 기초 1강</a>) 하셨는데 최신버전보단 가장 많은 사람들이 쓰는 버전을 다운받는 것을 추천.</p>\n<p>[리액트 17.0.2 버전 에러사항 깃허브주소] (<a href=\"https://github.com/facebook/react/releases/tag/v17.0.2\">https://github.com/facebook/react/releases/tag/v17.0.2</a>)</p>\n<ol start=\"2\">\n<li>\n<p>폴더 생성후</p>\n</li>\n<li>\n<p>리액트 프로젝트 생성\nVSC 속 터미널을 연다음 <code class=\"language-text\">npx create-react-app (+ 프로젝트 명)</code>\n(라이브러리임)</p>\n</li>\n<li>\n<p>설치중</p>\n</li>\n<li>\n<p>터미널에 <code class=\"language-text\">cd (+ 프로젝트명)</code> Enter\n(해당폴더로 들어가는 중)\n(파일 경로 확인하고 싶으면 <code class=\"language-text\">pwd</code> 터미널에 쳐보기 )</p>\n</li>\n<li>\n<p>VSC : 터미널 열어서 <code class=\"language-text\">npm start</code> 입력</p>\n</li>\n</ol>\n<p>리액트 설치 방법\nNPM(Node Package Manager)\n<a href=\"https://seizemymoment.tistory.com/106\">참고</a></p>\n<ol start=\"7\">\n<li>리액트 설치 완료 !</li>\n</ol>\n<p><a href=\"https://seizemymoment.tistory.com/106\">npm과 npx의 차이는 뭘까?</a></p>\n<hr>\n<p>CRA - 구성하는 폴더\nnode.modules -\npackage.json - 요약본 (프로젝트 이름, 버전, dependencies(의존성:))\ngit ignore - git은 버전 관리 프로그램인데, 깃 이그노어를 설치하면 깃을 추적하지 않아서 깃헙에 올라가지 않음.공유되지 않지 않아야할 민감한 정보는 여기다 적어야함. 혹은 공유해야할 사람과 중복으로 가지고 있으면.</p>\n<ul>\n<li>공유받을 때 git clone 할때, node.modules는 받을 필요없고 package.json만 받으면 된다.</li>\n</ul>\n<p>화면을 그리는 폴더 ㅣㅊ 파일\nindex.html\nindex.js -> ReactDOM.render 함수의 인자는 두개 : 첫번째는 화면에 보여주고 싶은 컴포넌트 / 두번째는 화면에 보여주고 싶은 컴포넌트의 위치\nApp.js -> 현재 보여주는 스크린 첫 면</p>\n<p>src -> component’s’ : 공통 컴포넌트 관리 nav, footer\npages -> 페이지 내의 컴포넌트 경우 이 폴더에서 관리\nstyles -> 공통쓰이는 css</p>\n<p>node.js를 굳이 필요한 이유는?\nReact -> node.js -> browser\nJSX, syntax, bundling, env 다ㅏ 구동하고 브라우저로 보내야하기 때문에</p>\n<p>npm\npackage : 하나하나 프로그램들, (개발용어들은 먼저 쓰이다ㅏ가 나중에 정확히 정의를 하려고 한다. 그래서 좀 애매할 수도 있다.)</p>\n<h3 id=\"jsx-문법\" style=\"position:relative;\"><a href=\"#jsx-%EB%AC%B8%EB%B2%95\" aria-label=\"jsx 문법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSX 문법</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">** React란 html과 css, js를 동시에 한 파일내에서 작성하는 프레임워크이다.</code></pre></div>\n<ul>\n<li>App.js 파일이 메인페이지이다.</li>\n<li>JSX</li>\n</ul>\n<ol>\n<li>태그에 class를 주고 싶으면?</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;div className = '클래스명'></code></pre></div>\n<ol start=\"2\">\n<li>리액트에서 데이터 바인딩 쉽게 할 수 있음</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">** 데이터 바인딩이랑? 새로고침을 하지 않아도 쉽게 쉽게 재렌더링 할 수 있음!\n\n** {중괄호} 를 써야함!\n   {변수명, 함수명등}</code></pre></div>\n<p>그냥 {중괄호 안에 함수나 for, if 는 쓸 수 없음}</p>\n<ol start=\"3\">\n<li>JSX에서 style 속성 집어넣을때</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">style = {마찬가지로 중괄호, object 자료형으로 만든 스타일}</code></pre></div>\n<h3 id=\"usestate\" style=\"position:relative;\"><a href=\"#usestate\" aria-label=\"usestate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useState</h3>\n<p>React에서 데이터는 (데이터 저장방법 2가지)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. 변수에 넣거나\n2. state에 넣던가</code></pre></div>\n<ul>\n<li>state를 쓰는 가장 큰 장점 : 새로고침하지 않아도 html이 스무스하게 재렌더링이 된다는 것.</li>\n</ul>\n<ol>\n<li>{useState} 상단에 첨부</li>\n<li>useState(‘데이터’)</li>\n<li>문자, 숫자, array, object 다 저장가능\n** ES6 destructuring 문법 참고하기</li>\n</ol>\n<h3 id=\"eventlistener-추가방법\" style=\"position:relative;\"><a href=\"#eventlistener-%EC%B6%94%EA%B0%80%EB%B0%A9%EB%B2%95\" aria-label=\"eventlistener 추가방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>EventListener 추가방법</h3>\n<p>이벤트를 추가한다는 것 = 재렌더링이 많이 일어난다 = 데이터바인딩 쉽게 할 수 있게 만들자</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">onClick ={클릭될 때 실항할 함수}\nonClick = { ()=>{실행할 내용} }</code></pre></div>\n<h3 id=\"setstate\" style=\"position:relative;\"><a href=\"#setstate\" aria-label=\"setstate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>setState</h3>\n<p>데이터를 변경할 때,</p>\n<p>1.수정된 […데이터]</p>\n<p>state의 복사본(deep copy)을 새로 만들어서 수정하기 (원본 state 건들지 마!!)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">** deep copy란? 값 공유하지 않고 서로 독립적인 값을 가지는 복사를 뜻함</code></pre></div>\n<p>Array, Object state 데이터 수정방법</p>\n<ol start=\"2\">\n<li>변경함수 (‘대체할 데이터’)</li>\n</ol>\n<p>state의 복사본(deep copy)을 새로 만들어서 수정하기 (원본 state 건들지 마!!)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">** deep copy란? 값 공유하지 않고 서로 독립적인 값을 가지는 복사를 뜻함</code></pre></div>\n<p>정리 >> 우선 기존 state를 deep copy한 후, 대체할 데이터를 반영하고, 변경함수()에 집어넣기</p>\n<h3 id=\"component\" style=\"position:relative;\"><a href=\"#component\" aria-label=\"component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>component</h3>\n<p>.html 파일을 깔끔하게 축약해서 보기 예쁘게 만드는 문법</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">** 장점 : 덩어리로 관리할 수 있음. 반복하여 사용되는 html활용. 자주 변경되는 html UI. 다른 페이지 만들때.\n\n** 단점 : state 쓸 때 복잡해짐. (상위 component에서 만든 state를 쓰려면 props 문법을 활용할 수 있다)</code></pre></div>\n<ul>\n<li>html을 하나의 단어로 치환하여 사용한다. (하나의 덩어리로 활용가능)</li>\n</ul>\n<p>App.js에서 활용문법</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function 단어(){\nreturn(\n/// &lt;html 문법>\n)\n}</code></pre></div>\n<hr>\n<p><em>React 설치부터 정말 쉽지 않았다. js 기반의 프레임워크인만큼 앞으로 벌어질 재밌는 일에 대해 기대된다 😊</em></p>","excerpt":"SPA React 란? 웹앱을 만들때 가장 많은 사람들이 사용하는 자바스크립트 기반의 (Facebook에서 만든) 프레임워크 React 설치 Node.js 설치 ** 최신버전으로 깔아야 버그가 안생긴다고 (코딩애플 React 기초 1강) 하셨는데 최신버전보단 가장 많은 사람들이 쓰는 버전을 다운받는 것을 추천. [리액트 17.0.2 버전 에러사항 깃허브주소] (https://github.com/facebook/react/releases/tag/v17.0.2) 폴더 생성후 리액트 프로젝트 생성\nVSC 속 터미널을 연다음 \n(라이브러리임) 설치중 터미널에  Enter\n(해당폴더로 들어가는 중)\n(파일 경로 확인하고 싶으면  터미널에 쳐보기 ) VSC : 터미널 열어서  입력 리액트 설치 방법\nNPM(Node Package Manager)\n참고 리액트 설치 완료 ! npm과 npx의 차이는 뭘까? CRA - 구성하는 폴더\nnode.modules -\npackage.json - 요약본 (프…","frontmatter":{"date":"October 29, 2021","title":"SPA(Single Page Application)","categories":"웹공부","author":"홍유진","emoji":"♻️"},"fields":{"slug":"/react/"}},"next":{"id":"84d4d540-bcd7-5153-a209-4f8af45e11bc","html":"<!-- 프로젝트 UX/UI 웹공부 3D Network Server 아키텍쳐 Error -->\n<h2 id=\"redux-와-mobx의-차이점\" style=\"position:relative;\"><a href=\"#redux-%EC%99%80-mobx%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"redux 와 mobx의 차이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redux 와 MobX의 차이점</h2>","frontmatter":{"date":"October 28, 2021","title":"함수의 선언문과 표현식, 차이가 뭐야?","categories":"웹공부","author":"홍유진","emoji":"♻️"},"fields":{"slug":"/선언문-표현식/"}},"prev":{"id":"976ef7d1-72e0-5511-a6b0-5552b58ab2d5","html":"<!-- 프로젝트 UX/UI 웹공부 3D Network Server 아키텍쳐 Error -->\n<!-- ![github-blog-1.png](github-blog-1.png) -->\n<h2 id=\"-소개\" style=\"position:relative;\"><a href=\"#-%EC%86%8C%EA%B0%9C\" aria-label=\" 소개 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👋 소개</h2>","frontmatter":{"date":"October 30, 2021","title":"webGL openGL 환경이란?","categories":"웹공부 3D","author":"홍유진","emoji":"🧢"},"fields":{"slug":"/webGL/"}},"site":{"siteMetadata":{"siteUrl":"https://howyoujini.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/react/","nextSlug":"/선언문-표현식/","prevSlug":"/webGL/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}